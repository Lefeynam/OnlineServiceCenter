<Window x:Class="ServiceCenterOnline.AddEditPage.AddService"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ServiceCenterOnline.AddEditPage"
        mc:Ignorable="d"
                Title="Добавить услугу" Height="320" Width="490" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">

    <Window.Resources>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#2980b9"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
             Background="{TemplateBinding Background}" 
             BorderBrush="{TemplateBinding BorderBrush}" 
             BorderThickness="{TemplateBinding BorderThickness}" 
             CornerRadius="5">
                            <!-- Установка радиуса закругления -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#3498db"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2e6da4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,2,5,2"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Border" CornerRadius="3" 
                       BorderBrush="{TemplateBinding BorderBrush}" 
                       BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,2,5,2"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Border x:Name="border"
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton x:Name="ToggleButton"
                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Margin="0">
                                    <ContentPresenter Margin="3,3,23,3" 
                                      Content="{TemplateBinding SelectionBoxItem}" 
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Left"/>
                                </ToggleButton>
                            </Border>
                            <Popup x:Name="Popup"
               Placement="Bottom"
               AllowsTransparency="True"
               IsOpen="{TemplateBinding IsDropDownOpen}"
               Focusable="False"
               PopupAnimation="Slide">
                                <Grid Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  Background="White">
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Background="#3498db" CornerRadius="0 20 0 0" Margin="0,10,10,0" BorderBrush="#2980b9" BorderThickness="0 0 2 0">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0">
                <TextBlock FontSize="24" FontWeight="Bold" Foreground="White" Margin="0,10,0,20">
                Добавить<LineBreak/>услугу
                </TextBlock>
            </StackPanel>
        </Border>

        <!-- Основное содержание -->
        <Grid Grid.Column="1" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="110"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="{DynamicResource DGName}" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center"/>
                <TextBox Grid.Column="1" x:Name="txtName" Style="{StaticResource RoundedTextBox}" Width="200" HorizontalAlignment="Left"/>
            </Grid>

            <Grid Grid.Row="1" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="110"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="{DynamicResource DGDescription}" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center"/>
                <TextBox Grid.Column="1" x:Name="txtDescription" Style="{StaticResource RoundedTextBox}" Width="200" HorizontalAlignment="Left"/>
            </Grid>

            <Grid Grid.Row="2" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="110"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="{DynamicResource DGCoast}" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center"/>
                <TextBox Grid.Column="1" x:Name="txtCost" Style="{StaticResource RoundedTextBox}" Width="200" HorizontalAlignment="Left"/>
            </Grid>

            <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                <Button Content="{DynamicResource btnAdd}" Style="{StaticResource RoundedButtonStyle}" Margin="0,0,10,0" Click="ButAdd" Height="34" Width="67"/>
                <Button Content="{DynamicResource btnCancel}" Style="{StaticResource RoundedButtonStyle}" Click="CancelButton_Click" Width="56" Margin="0,0,10,0"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
